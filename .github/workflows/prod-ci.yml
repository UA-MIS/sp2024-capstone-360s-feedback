name: 360s Feedback - CI Workflow - Prod

on:
  pull_request:
    branches:
      - main

jobs:
  pr-build-and-test:
    runs-on: ubuntu-latest
    steps:
    # Step 1: Check out the code
    - uses: actions/checkout@v4
  
    # Step 3: Set up .NET (version 6.x)
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.x

    # Step 4: Restore dependencies
    - name: Restore dependencies
      run: dotnet restore Capstone_360s/Capstone_360s.sln

    # Step 5: Build the app (skip restore to save time)
    - name: Build the app
      run: dotnet build Capstone_360s/Capstone_360s.sln --no-restore -p:WarningLevel=0 
    
    # Step 6: Run tests and save results
    - name: Run tests
      run: dotnet test Capstone_360s/Capstone_360s.sln --logger "trx" --configuration Release --verbosity normal --collect:"XPlat Code Coverage"
    
    - name: Combine Coverage Reports # This is because one report is produced per project, and we want one result for all of them.
      uses: danielpalme/ReportGenerator-GitHub-Action@5.2.4
      with:
        reports: "**/*.cobertura.xml" # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
        targetdir: "${{ github.workspace }}" # REQUIRED # The directory where the generated report should be saved.
        reporttypes: "Cobertura" # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, Html_Dark, Html_Light, Html_BlueRed, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MarkdownSummaryGithub, MarkdownDeltaSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, TextDeltaSummary, Xml, XmlSummary
        verbosity: "Info" # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
        title: "Code Coverage" # Optional title.
        tag: "${{ github.run_number }}_${{ github.run_id }}" # Optional tag or build version.
        customSettings: "" # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings.
        toolpath: "reportgeneratortool" # Default directory for installing the dotnet tool.
    
    - name: Upload Combined Coverage XML
      uses: actions/upload-artifact@v4
      with:
        name: coverage
        path: ${{ github.workspace }}/Cobertura.xml
        retention-days: 5
      
    # Step 8: Ensure that the workflow fails if tests don't pass
    - name: Fail if tests fail
      if: failure()
      run: exit 1
